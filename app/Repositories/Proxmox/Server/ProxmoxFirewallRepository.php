<?php

namespace App\Repositories\Proxmox\Server;

use App\Repositories\Proxmox\ProxmoxRepository;

class ProxmoxFirewallRepository extends ProxmoxRepository
{
    public function updateOptions(array $payload)
    {
        $response = $this->getHttpClientWithParams()
            ->put('/api2/json/nodes/{node}/qemu/{server}/firewall/options', $payload)
            ->json();

        return $this->getData($response);
    }

    public function getIpsets()
    {
        $response = $this->getHttpClientWithParams()
            ->get('/api2/json/nodes/{node}/qemu/{server}/firewall/ipset')
            ->json();

        return $this->getData($response);
    }

    public function createIpset(string $name, string $comments = 'Generated by Convoy')
    {
        $response = $this->getHttpClientWithParams()
            ->post('/api2/json/nodes/{node}/qemu/{server}/firewall/ipset', [
                'name' => $name,
                'comment' => $comments,
            ])
            ->json();

        return $this->getData($response);
    }

    public function deleteIpset(string $name)
    {
        $response = $this->getHttpClientWithParams([
            'ipset' => $name,
        ])
            ->delete('/api2/json/nodes/{node}/qemu/{server}/firewall/ipset/{ipset}')
            ->json();

        return $this->getData($response);
    }

    public function getLockedIps(string $ipset)
    {
        $response = $this->getHttpClientWithParams([
            'ipset' => $ipset,
        ])
            ->get('/api2/json/nodes/{node}/qemu/{server}/firewall/ipset/{ipset}')
            ->json();

        return $this->getData($response);
    }

    public function lockIp(string $ipset, string $address, string $comments = 'Generated by Convoy')
    {
        $response = $this->getHttpClientWithParams([
            'ipset' => $ipset,
        ])
            ->post('/api2/json/nodes/{node}/qemu/{server}/firewall/ipset/{ipset}', [
                'cidr' => $address,
                'nomatch' => false,
                'comment' => $comments,
            ])
            ->json();

        return $this->getData($response);
    }

    public function unlockIp(string $ipset, string $address)
    {
        $response = $this->getHttpClientWithParams([
            'ipset' => $ipset,
            'address' => $address,
        ])
            ->delete('/api2/json/nodes/{node}/qemu/{server}/firewall/ipset/{ipset}/{address}')
            ->json();

        return $this->getData($response);
    }
}
